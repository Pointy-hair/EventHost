@model EventHost.Web.Models.Sections.EditSectionViewModel

@{
    ViewData["Title"] = "Create section";
    ViewData["Subtitle"] = Model.EventName;
}

<form asp-action="Create">
    <div class="form-horizontal">
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Description" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="StartOn" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <kendo-datetimepicker for="StartOn" deferred="true" />
                <span asp-validation-for="StartOn" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="EndOn" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <kendo-datetimepicker for="EndOn" deferred="true" />
                <span asp-validation-for="EndOn" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="hidden" asp-for="EventId" />
                <input type="submit" value="Save section" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            function startChange() {
                var startDate = $dpStart.value(),
                    endDate = $dpEnd.value();
                
                if (startDate) {
                    startDate = new Date(startDate);
                    startDate.setDate(startDate.getDate());
                    $dpEnd.min(startDate);
                    $dpEnd.value(startDate);
                } 
            }

            var $dpStart = $('#StartOn').data('kendoDateTimePicker')
                , $dpEnd = $('#EndOn').data('kendoDateTimePicker');

            $dpStart.bind('change', startChange);
            
            $dpEnd.min($dpStart.value());
        });
    </script>
}
