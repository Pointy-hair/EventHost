@model EventHost.Web.Models.Registrations.EventUserRegistrationsViewModel
@{
    ViewData["Title"] = $"{Model.Event.Name} registrations";
    ViewData["Subtitle"] = $"{Model.User.FirstName} {Model.User.LastName}";
}

<div class="actions">
    <a asp-action="Details" asp-controller="Events" asp-route-id="@Model.Event.Id" class="btn btn-default">&laquo; Back to event</a>
</div>

<div class="row">
    <div class="col-md-5">
        <div class="sections">
            @foreach (var sec in Model.Sections)
            {
                <div class="section">
                    <h3>
                        @sec.Name
                        <small>@($"{sec.StartOn:ddd, h:mm tt} - {sec.EndOn:ddd, h:mm tt}")</small>
                    </h3>

                    <div class="session-info">
                        @{
                            var session = Model.RegisteredSessions.SingleOrDefault(x => x.SectionId == sec.Id);
                        }
                        @if (session == null)
                {
                            <h4><em>You are not registered for this section.</em></h4>
                        }
                        else
                        {
                            <h4>@session.Name</h4>

                            <address>
                                <strong>@session.HostName</strong><br />
                                @session.Address<br />
                                @($"{session.City}, {session.State} {session.PostalCode}")
                            </address>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-md-7">
        <div id="map" style="width: 100%; height: 500px;"></div>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            
        });

        var map;
        var markers = [];
        var infoWindow;

        function initMap() {
            var milwaukee = { lat: 43.038902, lng: -87.906471 };
            map = new google.maps.Map(document.getElementById('map'),
                {
                    center: milwaukee,
                    zoom: 11,
                    mapTypeId: 'roadmap'
                });
            infoWindow = new google.maps.InfoWindow();

            var geocoder = new google.maps.Geocoder();

            var sessions = @Html.Raw(Model.SerializedSessions);

            _.each(sessions, function (session) {
                var address = session.Address + ', ' + session.City + ', ' + session.State + ' ' + session.PostalCode;
                geocoder.geocode({ address: address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var loc = results[0].geometry.location;

                        createMapMarker(loc, session);
                    }
                });

            })
        }

        function createMapMarker(center, session) {
            var html = '<strong>' + session.Name + '</strong><br /><br />';
            html += session.HostName + '<br />';
            html += session.Address + '<br />' + session.City + ', ' + session.State + ' ' + session.PostalCode + '<br /><br />';

            var marker = new google.maps.Marker({
                map: map,
                position: center
            });

            google.maps.event.addListener(marker, 'click', function () {
                infoWindow.setContent(html);
                infoWindow.open(map, marker);
            });
            markers.push(marker);
        }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCxQV-xDIjq7XWVA59LusPyGHu-GeA_wDY&callback=initMap"></script>
}